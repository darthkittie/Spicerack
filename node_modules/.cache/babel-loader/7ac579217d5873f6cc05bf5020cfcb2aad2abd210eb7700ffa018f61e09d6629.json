{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elija\\\\OneDrive\\\\Desktop\\\\Projects\\\\Recipe-Tracker\\\\Spicerack\\\\src\\\\context\\\\RecipeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeContext = /*#__PURE__*/createContext();\nconst initialState = {\n  recipes: [],\n  currentRecipeIndex: 0,\n  userIngredients: [],\n  savedRecipes: [],\n  loading: false,\n  error: null,\n  searchQuery: '',\n  nutritionData: {}\n};\nconst recipeReducer = (state, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return {\n        ...state,\n        loading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case 'SET_RECIPES':\n      return {\n        ...state,\n        recipes: action.payload,\n        currentRecipeIndex: 0,\n        loading: false\n      };\n    case 'NEXT_RECIPE':\n      return {\n        ...state,\n        currentRecipeIndex: Math.min(state.currentRecipeIndex + 1, state.recipes.length - 1)\n      };\n    case 'PREVIOUS_RECIPE':\n      return {\n        ...state,\n        currentRecipeIndex: Math.max(state.currentRecipeIndex - 1, 0)\n      };\n    case 'SWIPE_LEFT':\n      return {\n        ...state,\n        currentRecipeIndex: state.currentRecipeIndex + 1\n      };\n    case 'SWIPE_RIGHT':\n      return {\n        ...state,\n        currentRecipeIndex: state.currentRecipeIndex + 1\n      };\n    case 'SET_USER_INGREDIENTS':\n      return {\n        ...state,\n        userIngredients: action.payload\n      };\n    case 'ADD_USER_INGREDIENT':\n      return {\n        ...state,\n        userIngredients: [...state.userIngredients, action.payload]\n      };\n    case 'REMOVE_USER_INGREDIENT':\n      return {\n        ...state,\n        userIngredients: state.userIngredients.filter(ing => ing.id !== action.payload)\n      };\n    case 'SET_SAVED_RECIPES':\n      return {\n        ...state,\n        savedRecipes: action.payload\n      };\n    case 'SAVE_RECIPE':\n      return {\n        ...state,\n        savedRecipes: [...state.savedRecipes, action.payload]\n      };\n    case 'SET_SEARCH_QUERY':\n      return {\n        ...state,\n        searchQuery: action.payload\n      };\n    case 'SET_NUTRITION_DATA':\n      return {\n        ...state,\n        nutritionData: {\n          ...state.nutritionData,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const RecipeProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(recipeReducer, initialState);\n\n  // API functions\n  const scrapeRecipes = async (query, maxRecipes = 10) => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      dispatch({\n        type: 'SET_ERROR',\n        payload: null\n      });\n      const response = await axios.post('/api/scrape-recipes', {\n        query: query || 'chicken recipes',\n        max_recipes: maxRecipes\n      });\n      if (response.data.success) {\n        dispatch({\n          type: 'SET_RECIPES',\n          payload: response.data.recipes\n        });\n        dispatch({\n          type: 'SET_SEARCH_QUERY',\n          payload: query\n        });\n      } else {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: response.data.error\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const getRecipes = async () => {\n    try {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: true\n      });\n      const response = await axios.get('/api/recipes');\n      if (response.data.success) {\n        dispatch({\n          type: 'SET_RECIPES',\n          payload: response.data.recipes\n        });\n      } else {\n        dispatch({\n          type: 'SET_ERROR',\n          payload: response.data.error\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: 'SET_ERROR',\n        payload: error.message\n      });\n    }\n  };\n  const getUserIngredients = async () => {\n    try {\n      const response = await axios.get('/api/ingredients');\n      if (response.data.success) {\n        dispatch({\n          type: 'SET_USER_INGREDIENTS',\n          payload: response.data.ingredients\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching user ingredients:', error);\n    }\n  };\n  const addUserIngredient = async ingredient => {\n    try {\n      const response = await axios.post('/api/ingredients', ingredient);\n      if (response.data.success) {\n        await getUserIngredients(); // Refresh the list\n      }\n    } catch (error) {\n      console.error('Error adding ingredient:', error);\n    }\n  };\n  const removeUserIngredient = async ingredientId => {\n    try {\n      // Note: You'll need to add a DELETE endpoint to your backend\n      dispatch({\n        type: 'REMOVE_USER_INGREDIENT',\n        payload: ingredientId\n      });\n    } catch (error) {\n      console.error('Error removing ingredient:', error);\n    }\n  };\n  const getRecipeNutrition = async recipeId => {\n    try {\n      const response = await axios.get(`/api/recipes/${recipeId}/nutrition`);\n      if (response.data.success) {\n        dispatch({\n          type: 'SET_NUTRITION_DATA',\n          payload: {\n            [recipeId]: response.data.nutrition\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error fetching nutrition data:', error);\n    }\n  };\n  const saveRecipe = async (recipeId, rating = 5, notes = '') => {\n    try {\n      const response = await axios.post(`/api/recipes/${recipeId}/save`, {\n        rating,\n        notes\n      });\n      if (response.data.success) {\n        // Find the recipe to save\n        const recipe = state.recipes.find(r => r.id === recipeId);\n        if (recipe) {\n          dispatch({\n            type: 'SAVE_RECIPE',\n            payload: {\n              ...recipe,\n              rating,\n              notes\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Error saving recipe:', error);\n    }\n  };\n  const swipeLeft = () => {\n    dispatch({\n      type: 'SWIPE_LEFT'\n    });\n  };\n  const swipeRight = () => {\n    dispatch({\n      type: 'SWIPE_RIGHT'\n    });\n  };\n  const nextRecipe = () => {\n    dispatch({\n      type: 'NEXT_RECIPE'\n    });\n  };\n  const previousRecipe = () => {\n    dispatch({\n      type: 'PREVIOUS_RECIPE'\n    });\n  };\n\n  // Load initial data\n  useEffect(() => {\n    getRecipes();\n    getUserIngredients();\n  }, []);\n  const value = {\n    ...state,\n    scrapeRecipes,\n    getRecipes,\n    getUserIngredients,\n    addUserIngredient,\n    removeUserIngredient,\n    getRecipeNutrition,\n    saveRecipe,\n    swipeLeft,\n    swipeRight,\n    nextRecipe,\n    previousRecipe\n  };\n  return /*#__PURE__*/_jsxDEV(RecipeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = RecipeProvider;\nexport const useRecipe = () => {\n  _s2();\n  const context = useContext(RecipeContext);\n  if (!context) {\n    throw new Error('useRecipe must be used within a RecipeProvider');\n  }\n  return context;\n};\n_s2(useRecipe, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"RecipeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","axios","jsxDEV","_jsxDEV","RecipeContext","initialState","recipes","currentRecipeIndex","userIngredients","savedRecipes","loading","error","searchQuery","nutritionData","recipeReducer","state","action","type","payload","Math","min","length","max","filter","ing","id","RecipeProvider","children","_s","dispatch","scrapeRecipes","query","maxRecipes","response","post","max_recipes","data","success","message","getRecipes","get","getUserIngredients","ingredients","console","addUserIngredient","ingredient","removeUserIngredient","ingredientId","getRecipeNutrition","recipeId","nutrition","saveRecipe","rating","notes","recipe","find","r","swipeLeft","swipeRight","nextRecipe","previousRecipe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useRecipe","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/elija/OneDrive/Desktop/Projects/Recipe-Tracker/Spicerack/src/context/RecipeContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RecipeContext = createContext();\r\n\r\nconst initialState = {\r\n  recipes: [],\r\n  currentRecipeIndex: 0,\r\n  userIngredients: [],\r\n  savedRecipes: [],\r\n  loading: false,\r\n  error: null,\r\n  searchQuery: '',\r\n  nutritionData: {},\r\n};\r\n\r\nconst recipeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_LOADING':\r\n      return { ...state, loading: action.payload };\r\n    \r\n    case 'SET_ERROR':\r\n      return { ...state, error: action.payload, loading: false };\r\n    \r\n    case 'SET_RECIPES':\r\n      return { ...state, recipes: action.payload, currentRecipeIndex: 0, loading: false };\r\n    \r\n    case 'NEXT_RECIPE':\r\n      return { \r\n        ...state, \r\n        currentRecipeIndex: Math.min(state.currentRecipeIndex + 1, state.recipes.length - 1) \r\n      };\r\n    \r\n    case 'PREVIOUS_RECIPE':\r\n      return { \r\n        ...state, \r\n        currentRecipeIndex: Math.max(state.currentRecipeIndex - 1, 0) \r\n      };\r\n    \r\n    case 'SWIPE_LEFT':\r\n      return { ...state, currentRecipeIndex: state.currentRecipeIndex + 1 };\r\n    \r\n    case 'SWIPE_RIGHT':\r\n      return { ...state, currentRecipeIndex: state.currentRecipeIndex + 1 };\r\n    \r\n    case 'SET_USER_INGREDIENTS':\r\n      return { ...state, userIngredients: action.payload };\r\n    \r\n    case 'ADD_USER_INGREDIENT':\r\n      return { \r\n        ...state, \r\n        userIngredients: [...state.userIngredients, action.payload] \r\n      };\r\n    \r\n    case 'REMOVE_USER_INGREDIENT':\r\n      return { \r\n        ...state, \r\n        userIngredients: state.userIngredients.filter(ing => ing.id !== action.payload) \r\n      };\r\n    \r\n    case 'SET_SAVED_RECIPES':\r\n      return { ...state, savedRecipes: action.payload };\r\n    \r\n    case 'SAVE_RECIPE':\r\n      return { \r\n        ...state, \r\n        savedRecipes: [...state.savedRecipes, action.payload] \r\n      };\r\n    \r\n    case 'SET_SEARCH_QUERY':\r\n      return { ...state, searchQuery: action.payload };\r\n    \r\n    case 'SET_NUTRITION_DATA':\r\n      return { \r\n        ...state, \r\n        nutritionData: { ...state.nutritionData, ...action.payload } \r\n      };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const RecipeProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(recipeReducer, initialState);\r\n\r\n  // API functions\r\n  const scrapeRecipes = async (query, maxRecipes = 10) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      dispatch({ type: 'SET_ERROR', payload: null });\r\n      \r\n      const response = await axios.post('/api/scrape-recipes', {\r\n        query: query || 'chicken recipes',\r\n        max_recipes: maxRecipes\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        dispatch({ type: 'SET_RECIPES', payload: response.data.recipes });\r\n        dispatch({ type: 'SET_SEARCH_QUERY', payload: query });\r\n      } else {\r\n        dispatch({ type: 'SET_ERROR', payload: response.data.error });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    }\r\n  };\r\n\r\n  const getRecipes = async () => {\r\n    try {\r\n      dispatch({ type: 'SET_LOADING', payload: true });\r\n      \r\n      const response = await axios.get('/api/recipes');\r\n      \r\n      if (response.data.success) {\r\n        dispatch({ type: 'SET_RECIPES', payload: response.data.recipes });\r\n      } else {\r\n        dispatch({ type: 'SET_ERROR', payload: response.data.error });\r\n      }\r\n    } catch (error) {\r\n      dispatch({ type: 'SET_ERROR', payload: error.message });\r\n    }\r\n  };\r\n\r\n  const getUserIngredients = async () => {\r\n    try {\r\n      const response = await axios.get('/api/ingredients');\r\n      \r\n      if (response.data.success) {\r\n        dispatch({ type: 'SET_USER_INGREDIENTS', payload: response.data.ingredients });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching user ingredients:', error);\r\n    }\r\n  };\r\n\r\n  const addUserIngredient = async (ingredient) => {\r\n    try {\r\n      const response = await axios.post('/api/ingredients', ingredient);\r\n      \r\n      if (response.data.success) {\r\n        await getUserIngredients(); // Refresh the list\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding ingredient:', error);\r\n    }\r\n  };\r\n\r\n  const removeUserIngredient = async (ingredientId) => {\r\n    try {\r\n      // Note: You'll need to add a DELETE endpoint to your backend\r\n      dispatch({ type: 'REMOVE_USER_INGREDIENT', payload: ingredientId });\r\n    } catch (error) {\r\n      console.error('Error removing ingredient:', error);\r\n    }\r\n  };\r\n\r\n  const getRecipeNutrition = async (recipeId) => {\r\n    try {\r\n      const response = await axios.get(`/api/recipes/${recipeId}/nutrition`);\r\n      \r\n      if (response.data.success) {\r\n        dispatch({ \r\n          type: 'SET_NUTRITION_DATA', \r\n          payload: { [recipeId]: response.data.nutrition } \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching nutrition data:', error);\r\n    }\r\n  };\r\n\r\n  const saveRecipe = async (recipeId, rating = 5, notes = '') => {\r\n    try {\r\n      const response = await axios.post(`/api/recipes/${recipeId}/save`, {\r\n        rating,\r\n        notes\r\n      });\r\n      \r\n      if (response.data.success) {\r\n        // Find the recipe to save\r\n        const recipe = state.recipes.find(r => r.id === recipeId);\r\n        if (recipe) {\r\n          dispatch({ \r\n            type: 'SAVE_RECIPE', \r\n            payload: { ...recipe, rating, notes } \r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving recipe:', error);\r\n    }\r\n  };\r\n\r\n  const swipeLeft = () => {\r\n    dispatch({ type: 'SWIPE_LEFT' });\r\n  };\r\n\r\n  const swipeRight = () => {\r\n    dispatch({ type: 'SWIPE_RIGHT' });\r\n  };\r\n\r\n  const nextRecipe = () => {\r\n    dispatch({ type: 'NEXT_RECIPE' });\r\n  };\r\n\r\n  const previousRecipe = () => {\r\n    dispatch({ type: 'PREVIOUS_RECIPE' });\r\n  };\r\n\r\n  // Load initial data\r\n  useEffect(() => {\r\n    getRecipes();\r\n    getUserIngredients();\r\n  }, []);\r\n\r\n  const value = {\r\n    ...state,\r\n    scrapeRecipes,\r\n    getRecipes,\r\n    getUserIngredients,\r\n    addUserIngredient,\r\n    removeUserIngredient,\r\n    getRecipeNutrition,\r\n    saveRecipe,\r\n    swipeLeft,\r\n    swipeRight,\r\n    nextRecipe,\r\n    previousRecipe,\r\n  };\r\n\r\n  return (\r\n    <RecipeContext.Provider value={value}>\r\n      {children}\r\n    </RecipeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useRecipe = () => {\r\n  const context = useContext(RecipeContext);\r\n  if (!context) {\r\n    throw new Error('useRecipe must be used within a RecipeProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}